@inherits umbraco.MacroEngines.DynamicNodeContext
@{
    //Change mime type
    umbraco.library.ChangeContentType("text/xml");

    //Get the domain 
    var siteURL = "http://" + Request.Url.Host;
	var homenode = Model.AncestorOrSelf("Homepage");
	var siteName = String.IsNullOrEmpty(homenode.siteName) ? "My" : homenode.siteName;
	
    //Get Macro Parameters
    var rssTitle        = String.IsNullOrEmpty(Model.metaTitle) ? siteName + " RSS feed" : Model.metaTitle;
    var rssDescription  = String.IsNullOrEmpty(Model.metaDescription) ? "Subscribe to my RSS feed" : Model.metaDescription;

    //Get the latest createDate of all news items to use as the RSS feed updateDate
    dynamic latestNodeUpdated = Model.Children.Where("visible").OrderBy("updateDate desc").First();
} 
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" 
    xmlns:content="http://purl.org/rss/1.0/modules/content/" 
    xmlns:wfw="http://wellformedweb.org/CommentAPI/" 
    xmlns:dc="http://purl.org/dc/elements/1.1/" 
    xmlns:rssdatehelper="urn:rssdatehelper">
        <channel>
            <title>@rssTitle</title>
            <link>@siteURL</link>
            <description>@rssDescription</description>
            <language>en</language>
            <pubDate>@latestNodeUpdated.UpdateDate.ToString("r")</pubDate>
            <lastBuildDate>@latestNodeUpdated.UpdateDate.ToString("r")</lastBuildDate>
            <docs>@Model.Url/rss</docs>
            <copyright>Copyright @DateTime.Now.Year, @siteName</copyright>
            <generator>umbraco</generator>
            <image>
                <url>@siteURL/css/images/logo.gif</url>
                <title>@rssTitle</title>
                <link>@siteURL</link>
            </image>
            @{
                foreach (var item in Model.Children.Where("Visible"))
                {
                    var feedCopy = item.HasValue("bodyText") ? item.bodyText : "";
                    var feedCopySum = item.HasValue("metaDescription") ? item.metaDescription : Library.StripHtml(feedCopy);
                    feedCopySum = Library.Truncate(feedCopySum, 50, true);
                    var feedImage = item.HasValue("pageMedia") ? item.pageMedia : "";
                    <item>
                        <title>@item.Name</title>
                        <link>@item.Url</link>
                        <description>@feedCopySum</description>
                        <pubDate>@item.UpdateDate.ToString("r")</pubDate>
                        <dc:creator>Alex Allan</dc:creator>
                        <category>Sculpture</category>
                        <category>Model</category>
                        <guid>@item.Url</guid>
                        <content:encoded><![CDATA[ @feedCopy ]]></content:encoded>
                    </item>
                }
            }
        </channel>
</rss>